openapi: 3.0.1
info:
  title: My REST API
  description: 'This is a REST API'
  version: "1.0.0"
security:
  - bearerAuth: []
paths:
  /auth/login:
    post:
      tags:
        - 'Authentication'
      security: []
      summary: Obtain an API Access Token via login
      operationId: login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - client_id
                - client_secret
              properties:
                client_id:
                  type: string
                  description: The id of the user
                  example: webshop+api@example.com
                client_secret:
                  type: string
                  description: The user's password
                  example: SomeSecret779
      responses:
        '200':
          description: The token result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          description: Invalid credentials
        '422':
          description: 'Malformed request: fields are missing or are supplied in an invalid format'
          content:
            application/json:
              example:
                message: The given data was invalid.
                errors:
                  client_id:
                    - "The client id field is required."
                  client_secret:
                    - "The client secret field is required."
  /auth/token:
    post:
      tags:
        - 'Authentication'
      security: []
      summary: Obtain an API Access Token via a refresh token
      operationId: token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - refresh_token
              properties:
                refresh_token:
                  type: string
                  description: The refresh token
                  example: euJhERscCI6IkXV9.ezdWEiqz1Swi1W10IjaxNTYyMTg5MOjE1NjU5MsdDMsw.lFlaJqsPw4xX-c3aWACava
      responses:
        '200':
          description: The token result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "The passed token is not a refresh token"
        '401':
          description: Unathorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Refresh token has expired. Use the login endpoint to get a new one"
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Token:
      type: object
      properties:
        access_token:
          type: string
          description: The bearer token
          example: eyJhb1cioiJIVCJ9.eyAixjMdNTY31D1wIioNSiW0jxTyT5TyCjIxOTI3MjJ9.kOkTVr4rPq5wiv2W1bB1UQ
        token_type:
          type: string
          example: Bearer
        expires_in:
          type: integer
          description: Token expiration time in seconds
          example: 3600
        refresh_token:
          type: string
          description: The refresh token
          example: eyJhba5c1IaIkXV9.ezdfIiOqNSaiaWF0IjoxNTYyMTg5MOjE1NjU5MsdDMsw.lFlaJqxPP4rX-c3sWACvvO
  responses:
    InvalidApiRequest:
      description: Invalid Request
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Missing Authorization Token"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Expired token. Use the refresh token to get a new one"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "You are no longer an active user here"
